#include <PubSubClient.h>

#include <UIPEthernet.h>
#include <utility/logging.h>

#include <SPI.h>

int pino2 = 2;
bool estado_sensor;
boolean mensagem;

//Define o endereço MAC que será utilizado
byte mac[] = {0xF0, 0x65, 0x7E, 0x0D, 0xFF, 0x8C};

//Inicia o cliente Ethernet
EthernetClient client;

PubSubClient mqttClient(client);
void setup() {
    //Inicia o controlador Ethernet e solicita um IP para o servidor de DHCP
    Ethernet.begin(mac);

    //Inicia o monitor Serial
    Serial.begin(9600);

    mqttClient.setServer("54.173.148.114",1883);

    //Exibe no Monitor Serial as informações sobre o IP do Arduino
    Serial.print("O IP do Arduino e: ");
    Serial.println(Ethernet.localIP());

    //Exibe no Monitor Serial as informações sobre a Máscara de Rede do Arduino
    Serial.print("A Mascara de Rede do Arduino e: ");
    Serial.println(Ethernet.subnetMask());

    //Exibe no Monitor Serial as informações sobre o Gateway do Arduino
    Serial.print("O Gateway do Arduino e: ");
    Serial.println(Ethernet.gatewayIP());

    //Exibe uma linha em branco
    Serial.println("");
    pinMode(pino2, INPUT_PULLUP);


}

void loop() { 
  
    mqttClient.connect("DiegoVicente");

    estado_sensor = digitalRead(pino2);
    
  if(estado_sensor ){

    mensagem = mqttClient.publish("DiegoVicente","RACK FECHADO");

    mqttClient.loop();
    Serial.println ("RACK FECHADO");
    
    Serial.println (mensagem);
   }
 else{

  mensagem = mqttClient.publish("DiegoVicente","RACK ABERTO!");
  
    Serial.println("RACK ABERTO");
}

}
